{
  "version": "4.67.0",
  "application": {
    "aimms.widget.type": {
      "literal": "application"
    },
    "browsername": {
      "aimms": {
        "contents": [
          "webui::ClientBrowserName"
        ]
      }
    },
    "browsertimezone": {
      "aimms": {
        "contents": [
          "webui::BrowserTimeZone"
        ]
      }
    },
    "ignoredst": {
      "aimms": {
        "contents": [
          "webui::IgnoreDST"
        ]
      }
    },
    "pages": {
      "literal": {
        "name": "root",
        "slug": "root",
        "children": [
          {
            "name": "Main Project",
            "slug": "main_project",
            "children": [
              {
                "name": "Welcome",
                "slug": "home",
                "type": "pagev2-grid",
                "children": []
              },
              {
                "name": "Problem",
                "type": "pagev2-grid",
                "slug": "problem",
                "children": []
              },
              {
                "name": "Control Panel",
                "type": "pagev2-grid",
                "slug": "control_panel",
                "children": []
              },
              {
                "name": "Results",
                "type": "pagev2-grid",
                "slug": "results",
                "children": []
              }
            ]
          }
        ]
      }
    },
    "theme.classic": {
      "literal": "NOT_ALLOWED"
    },
    "timezone": {
      "aimms": {
        "contents": [
          "webui::DisplayTimeZone"
        ]
      }
    },
    "timezone.dst.readonly": {
      "aimms": {
        "contents": [
          "webui::DefaultDSTSettingForDisplayTimeZone"
        ]
      }
    },
    "workflows.configuration": {
      "literal": {
        "identifier": "ui::sp_systemWorkflowSteps",
        "slice": [
          {
            "index": "webui::indexWorkflowOrder",
            "type": "free",
            "value": "webui::indexWorkflowOrder"
          },
          {
            "index": "webui::indexNoOfPages",
            "type": "free",
            "value": "webui::indexNoOfPages"
          },
          {
            "index": "webui::indexWorkflowPageSpec",
            "type": "free",
            "value": "webui::indexWorkflowPageSpec"
          }
        ]
      }
    },
    "workflows.information": {
      "aimms": {
        "contents": [
          "ui::sp_systemWorkflow"
        ],
        "slices": [
          {
            "identifier": "ui::sp_systemWorkflow",
            "slice": [
              {
                "index": "webui::indexWorkflowOrder",
                "type": "free",
                "value": "webui::indexWorkflowOrder"
              },
              {
                "index": "webui::indexWorkflowSpec",
                "type": "free",
                "value": "webui::indexWorkflowSpec"
              }
            ]
          }
        ]
      }
    },
    "workflows.state.openClose": {
      "literal": {
        "identifier": "ui::sp_systemWorkflowFoldingStates",
        "slice": [
          {
            "index": "webui::indexWorkflowOrder",
            "type": "free",
            "value": "webui::indexWorkflowOrder"
          },
          {
            "index": "webui::indexNoOfPages",
            "type": "free",
            "value": "webui::indexNoOfPages"
          },
          {
            "index": "webui::indexOpenCloseProps",
            "type": "free",
            "value": "webui::indexOpenCloseProps"
          }
        ]
      }
    }
  },
  "layouts/custom_82e6559d-d6f9-4d87-8aa0-a49c08dfc1f7": {
    "definition": {
      "literal": {
        "componentName": "Grid",
        "props": {
          "gridTemplateColumns": "0.6fr 1fr",
          "gridTemplateRows": "0.4fr 1fr",
          "gridTemplateAreas": "\"area-a area-a\" \"area-b area-c\""
        },
        "items": [
          {
            "componentName": "WidgetArea",
            "props": {
              "gridArea": "area-a",
              "name": "Area A",
              "gridAutoFlow": "column"
            }
          },
          {
            "componentName": "WidgetArea",
            "props": {
              "gridArea": "area-b",
              "name": "Area B",
              "gridAutoFlow": "row"
            }
          },
          {
            "componentName": "WidgetArea",
            "props": {
              "gridArea": "area-c",
              "name": "Area C",
              "gridAutoFlow": "column"
            }
          }
        ]
      }
    },
    "displayName": {
      "literal": "Layout2 Copy"
    }
  },
  "layouts/custom_c7d7602f-353b-4e73-ae4c-29e8a431ad35": {
    "definition": {
      "literal": {
        "componentName": "Grid",
        "props": {
          "gridTemplateColumns": "1fr 1fr",
          "gridTemplateRows": "1fr 0.5fr",
          "gridTemplateAreas": "\"area-a area-b\" \"area-c area-c\""
        },
        "items": [
          {
            "componentName": "WidgetArea",
            "props": {
              "gridArea": "area-a",
              "name": "Area A",
              "gridAutoFlow": "row"
            }
          },
          {
            "componentName": "WidgetArea",
            "props": {
              "gridArea": "area-b",
              "name": "Area B",
              "gridAutoFlow": "row"
            }
          },
          {
            "componentName": "WidgetArea",
            "props": {
              "gridArea": "area-c",
              "name": "Area C",
              "gridAutoFlow": "row"
            }
          }
        ]
      }
    },
    "displayName": {
      "literal": "ControlPanelPage"
    }
  },
  "layouts/custom_fa5bd0d7-7e27-4a9d-bb41-8d329fda8c60": {
    "definition": {
      "literal": {
        "componentName": "Grid",
        "props": {
          "gridTemplateColumns": "3fr 1fr",
          "gridTemplateRows": "1fr 0.5fr 1fr",
          "gridTemplateAreas": "\"area-a area-b\" \"area-a area-c\" \"area-d area-d\""
        },
        "items": [
          {
            "componentName": "WidgetArea",
            "props": {
              "gridArea": "area-a",
              "name": "Area A",
              "gridAutoFlow": "column"
            }
          },
          {
            "componentName": "WidgetArea",
            "props": {
              "gridArea": "area-b",
              "name": "Area B",
              "gridAutoFlow": "row"
            }
          },
          {
            "componentName": "WidgetArea",
            "props": {
              "gridArea": "area-c",
              "name": "Area C",
              "gridAutoFlow": "row"
            }
          },
          {
            "componentName": "WidgetArea",
            "props": {
              "gridArea": "area-d",
              "name": "Area D",
              "gridAutoFlow": "column"
            }
          }
        ]
      }
    },
    "displayName": {
      "literal": "Results Page"
    }
  },
  "pages/control_panel": {
    "aimms.widget.type": {
      "literal": "pagev2-grid"
    },
    "bindings": {
      "literal": [
        {
          "widgetUri": "lbl_problemTitle",
          "gridArea": "area-a",
          "dndId": "area-albl_problemTitle2"
        },
        {
          "widgetUri": "Costs",
          "gridArea": "area-a",
          "dndId": "area-aCosts3"
        },
        {
          "widgetUri": "Other Parameters",
          "gridArea": "area-a",
          "dndId": "Unassigned widgetsOther Parameters1"
        },
        {
          "widgetUri": "lbl_algorithmTitle",
          "gridArea": "area-b",
          "dndId": "area-blbl_algorithmTitle4"
        },
        {
          "widgetUri": "Algorithm Parameters_1",
          "gridArea": "area-b",
          "dndId": "area-bAlgorithm Parameters_15"
        },
        {
          "widgetUri": "k-NN Controls",
          "gridArea": "area-b",
          "dndId": "area-bk-NN Controls6"
        },
        {
          "widgetUri": "Fitness Chart_1",
          "gridArea": "area-c",
          "dndId": "area-cFitness Chart_17"
        }
      ]
    },
    "layoutId": {
      "literal": "custom_c7d7602f-353b-4e73-ae4c-29e8a431ad35"
    },
    "primarypageaction": {
      "aimms": {
        "contents": [
          "ui::sp_def_controlPanelPrimaryPageAction"
        ],
        "slices": [
          {
            "identifier": "ui::sp_def_controlPanelPrimaryPageAction",
            "slice": [
              {
                "index": "webui::indexPageActionSpec",
                "type": "free",
                "value": "webui::indexPageActionSpec"
              }
            ]
          }
        ]
      }
    },
    "widgets": {
      "literal": [
        {
          "uri": "Costs",
          "layoutInfo": {
            "width": "2",
            "height": "1"
          }
        },
        {
          "uri": "Other Parameters",
          "layoutInfo": {
            "width": "2",
            "height": "1"
          }
        },
        {
          "uri": "Algorithm Parameters_1",
          "layoutInfo": {
            "width": "2",
            "height": "1"
          }
        },
        {
          "uri": "k-NN Controls",
          "layoutInfo": {
            "width": "2",
            "height": "1"
          }
        },
        {
          "uri": "lbl_problemTitle",
          "layoutInfo": {
            "width": "2",
            "height": "1"
          }
        },
        {
          "uri": "lbl_algorithmTitle",
          "layoutInfo": {
            "width": "2",
            "height": "1"
          }
        },
        {
          "uri": "Fitness Chart_1",
          "layoutInfo": {}
        }
      ]
    }
  },
  "pages/home": {
    "aimms.widget.type": {
      "literal": "pagev2-grid"
    },
    "bindings": {
      "literal": [
        {
          "widgetUri": "img_homeLogo",
          "gridArea": "area-d",
          "dndId": "area-aimg_homeLogo1"
        },
        {
          "widgetUri": "txt_welcome",
          "gridArea": "area-a",
          "dndId": "area-atxt_welcome0"
        }
      ]
    },
    "layoutId": {
      "literal": "Layout10"
    },
    "widgets": {
      "literal": [
        {
          "uri": "txt_welcome",
          "layoutInfo": {
            "width": "2",
            "height": "1"
          }
        },
        {
          "uri": "img_homeLogo",
          "layoutInfo": {
            "width": "2",
            "height": "1"
          }
        }
      ]
    }
  },
  "pages/problem": {
    "aimms.widget.type": {
      "literal": "pagev2-grid"
    },
    "bindings": {
      "literal": [
        {
          "widgetUri": "txt_problemDescription",
          "gridArea": "area-a",
          "dndId": "Unassigned widgetstxt_problemDescription"
        }
      ]
    },
    "layoutId": {
      "literal": "Layout11"
    },
    "widgets": {
      "literal": [
        {
          "uri": "txt_problemDescription",
          "layoutInfo": {
            "width": "2",
            "height": "1"
          }
        }
      ]
    }
  },
  "pages/results": {
    "aimms.widget.type": {
      "literal": "pagev2-grid"
    },
    "bindings": {
      "literal": [
        {
          "widgetUri": "Chargers Per Station_1",
          "gridArea": "Unassigned widgets",
          "dndId": "Unassigned widgetsChargers Per Station_10"
        },
        {
          "widgetUri": "EV Allocations",
          "gridArea": "area-c",
          "dndId": "area-cEV Allocations1"
        },
        {
          "widgetUri": "Station Cost Breakdown",
          "gridArea": "area-c",
          "dndId": "area-cStation Cost Breakdown2"
        },
        {
          "widgetUri": "map",
          "gridArea": "area-b",
          "dndId": "area-bmap3"
        },
        {
          "widgetUri": "cmb_distanceToStationHistogram",
          "gridArea": "area-a",
          "dndId": "area-acmb_distanceToStationHistogram4"
        },
        {
          "widgetUri": "Chargers Per Station_2",
          "gridArea": "area-a",
          "dndId": "area-aChargers Per Station_26"
        },
        {
          "widgetUri": "Happiness",
          "gridArea": "area-a",
          "dndId": "area-aHappiness5"
        }
      ]
    },
    "layoutId": {
      "literal": "custom_82e6559d-d6f9-4d87-8aa0-a49c08dfc1f7"
    },
    "widgets": {
      "literal": [
        {
          "uri": "map",
          "layoutInfo": {
            "width": "2",
            "height": "1"
          }
        },
        {
          "uri": "Chargers Per Station_1",
          "layoutInfo": {
            "width": "2",
            "height": "1"
          }
        },
        {
          "uri": "Happiness",
          "layoutInfo": {
            "width": "2",
            "height": "1"
          }
        },
        {
          "uri": "EV Allocations",
          "layoutInfo": {
            "width": "2",
            "height": "1"
          }
        },
        {
          "uri": "Station Cost Breakdown",
          "layoutInfo": {
            "width": "2",
            "height": "1"
          }
        },
        {
          "uri": "cmb_distanceToStationHistogram",
          "layoutInfo": {
            "width": "2",
            "height": "1"
          }
        },
        {
          "uri": "Chargers Per Station_2",
          "layoutInfo": {}
        }
      ]
    }
  },
  "widgets/Algorithm Parameters_1": {
    "aimms.widget.type": {
      "literal": "scalar"
    },
    "contents": {
      "aimms": {
        "contents": [
          "p_numberParticles",
          "p_numberGenerations",
          "p_populationSize",
          "p_inertiaComponent",
          "p_cognitiveComponent",
          "p_socialComponent",
          "p_initial_velocity",
          "p_spawn_region"
        ]
      }
    },
    "contents.numdecimals": {
      "literal": 3
    },
    "custom.column.widths": {
      "literal": [
        {
          "type": "rowHeader",
          "colKey": "<IDENTIFIER-SET>",
          "width": 50.13
        },
        {
          "type": "colHeader",
          "colKey": {},
          "width": 47.91
        }
      ]
    },
    "name": {
      "literal": "scl_algorithmParameters"
    },
    "title": {
      "literal": "PSO Controls"
    },
    "views": {
      "literal": {}
    }
  },
  "widgets/Chargers Per Station_1": {
    "aimms.widget.type": {
      "literal": "barchart"
    },
    "contents": {
      "aimms": {
        "contents": [
          "ui::p_NumberOfVehiclesHistogram"
        ]
      }
    },
    "name": {
      "literal": "Chargers Per Station (1)"
    },
    "title": {
      "literal": "Distribution of Chargers per Station"
    },
    "views": {
      "literal": {}
    }
  },
  "widgets/Chargers Per Station_2": {
    "aimms.widget.type": {
      "literal": "combinationchart"
    },
    "color.index": {
      "literal": "<IDENTIFIER-SET>"
    },
    "contents.__display_order__": {
      "literal": [
        "contents.0"
      ]
    },
    "contents.0.chart.type": {
      "literal": "column"
    },
    "contents.0.identifier": {
      "literal": {
        "identifier": "ui::p_numberOfVehiclesHistogram",
        "slice": [
          {
            "index": "ui::i_slice",
            "type": "subset",
            "value": "ui::i_sliceNumberOfVehicles"
          }
        ]
      }
    },
    "contents.numdecimals": {
      "literal": 0
    },
    "contents.partition": {
      "literal": {
        "header": [
          "ui::i_slice"
        ],
        "grouped": [],
        "stacked": [],
        "aggregated": [
          "<IDENTIFIER-SET>"
        ]
      }
    },
    "data.labels.show": {
      "literal": true
    },
    "indices.__display_order__": {
      "literal": [
        "indices.0"
      ]
    },
    "legend.show": {
      "literal": false
    },
    "name": {
      "literal": "Chargers Per Station (1) (1)"
    },
    "title": {
      "literal": "Chargers per Station Histogram"
    },
    "views": {
      "literal": {}
    }
  },
  "widgets/cmb_distanceToStationHistogram": {
    "aimms.widget.type": {
      "literal": "combinationchart"
    },
    "color.index": {
      "literal": "<IDENTIFIER-SET>"
    },
    "contents.__display_order__": {
      "literal": [
        "contents.0"
      ]
    },
    "contents.0.identifier": {
      "literal": {
        "identifier": "ui::p_distanceToStationHistogram",
        "slice": [
          {
            "index": "ui::i_slice",
            "type": "subset",
            "value": "ui::i_sliceDistanceToStation"
          }
        ]
      }
    },
    "contents.numdecimals": {
      "literal": 0
    },
    "contents.partition": {
      "literal": {
        "header": [
          "ui::i_slice"
        ],
        "grouped": [],
        "stacked": [],
        "aggregated": [
          "<IDENTIFIER-SET>"
        ]
      }
    },
    "data.labels.show": {
      "literal": true
    },
    "indices.__display_order__": {
      "literal": [
        "indices.0"
      ]
    },
    "legend.show": {
      "literal": false
    },
    "name": {
      "literal": "cmb_distanceToStationHistogram"
    },
    "title": {
      "literal": "Distance to Station Histogram"
    },
    "views": {
      "literal": {}
    }
  },
  "widgets/Costs": {
    "aimms.widget.type": {
      "literal": "scalar"
    },
    "contents": {
      "aimms": {
        "contents": [
          "p_maintenanceCost",
          "p_constructionCost",
          "p_drivingCostPerMile",
          "p_chargingCostPerHour",
          "p_noAllocationPenalty"
        ]
      }
    },
    "custom.column.widths": {
      "literal": [
        {
          "type": "colHeader",
          "colKey": {},
          "width": 32.7
        },
        {
          "type": "rowHeader",
          "colKey": "<IDENTIFIER-SET>",
          "width": 53.54
        }
      ]
    },
    "name": {
      "literal": "scl_costs"
    },
    "title": {
      "literal": "Costs"
    },
    "views": {
      "literal": {}
    },
    "views.__display_order__": {
      "literal": [
        "views.0",
        "views.1"
      ]
    },
    "views.0.type": {
      "literal": "view"
    },
    "views.1.type": {
      "literal": "template"
    }
  },
  "widgets/EV Allocations": {
    "aimms.widget.type": {
      "literal": "table"
    },
    "contents": {
      "aimms": {
        "contents": [
          "p_bestGlobalAllocation",
          "p_bestGlobalSolutionDistanceToStation"
        ]
      }
    },
    "contents.partition": {
      "literal": {
        "rowHeader": [
          "i_loc"
        ],
        "colHeader": [
          "<IDENTIFIER-SET>"
        ],
        "aggregated": []
      }
    },
    "custom.column.widths": {
      "literal": [
        {
          "type": "colHeader",
          "colKey": {
            "<IDENTIFIER-SET>": "p_bestGlobalAllocation"
          },
          "width": 27.7
        },
        {
          "type": "colHeader",
          "colKey": {
            "<IDENTIFIER-SET>": "p_bestGlobalSolutionDistanceToStation"
          },
          "width": 28.75
        }
      ]
    },
    "name": {
      "literal": "EV Allocations"
    },
    "title": {
      "literal": "EV Overview"
    },
    "views": {
      "literal": {}
    }
  },
  "widgets/Fitness Chart_1": {
    "aimms.widget.type": {
      "literal": "combinationchart"
    },
    "contents.__display_order__": {
      "literal": [
        "contents.0",
        "contents.1"
      ]
    },
    "contents.0.chart.type": {
      "literal": "line"
    },
    "contents.0.identifier": {
      "literal": {
        "identifier": "p_generationalFitness",
        "slice": [
          {
            "index": "i_gen",
            "type": "free",
            "value": "i_gen"
          }
        ]
      }
    },
    "contents.1.chart.type": {
      "literal": "line"
    },
    "contents.1.identifier": {
      "literal": {
        "identifier": "p_globalBestFitness",
        "slice": [
          {
            "index": "i_gen",
            "type": "free",
            "value": "i_gen"
          }
        ]
      }
    },
    "contents.partition": {
      "literal": {
        "header": [
          "i_gen"
        ],
        "stacked": [],
        "grouped": [
          "<IDENTIFIER-SET>"
        ],
        "aggregated": []
      }
    },
    "legend.show": {
      "literal": true
    },
    "name": {
      "literal": "cmb_fitnessChart (1)"
    },
    "title": {
      "literal": "Performance"
    },
    "views": {
      "literal": {}
    }
  },
  "widgets/Happiness": {
    "aimms.widget.type": {
      "literal": "scalar"
    },
    "contents": {
      "aimms": {
        "contents": [
          "p_bestGlobalSolutionHappinessScore"
        ]
      }
    },
    "name": {
      "literal": "Happiness"
    },
    "title": {
      "literal": "Happiness Score"
    },
    "views": {
      "literal": {}
    },
    "views.__display_order__": {
      "literal": [
        "views.0",
        "views.1"
      ]
    },
    "views.0.type": {
      "literal": "view"
    },
    "views.1.type": {
      "literal": "template"
    }
  },
  "widgets/img_homeLogo": {
    "aimms.widget.type": {
      "literal": "image"
    },
    "contents": {
      "aimms": {
        "contents": [
          "ui::sp_def_logo"
        ]
      }
    },
    "name": {
      "literal": "img_homeLogo"
    }
  },
  "widgets/k-NN Controls": {
    "aimms.widget.type": {
      "literal": "scalar"
    },
    "contents": {
      "aimms": {
        "contents": [
          "p_def_nClosest",
          "p_def_distanceCutoff"
        ]
      }
    },
    "custom.column.widths": {
      "literal": [
        {
          "type": "rowHeader",
          "colKey": "<IDENTIFIER-SET>",
          "width": 51.57
        },
        {
          "type": "colHeader",
          "colKey": {},
          "width": 47.59
        }
      ]
    },
    "name": {
      "literal": "scl_k-NNControls"
    },
    "title": {
      "literal": "k-NN Controls"
    },
    "views": {
      "literal": {}
    }
  },
  "widgets/lbl_algorithmTitle": {
    "aimms.widget.type": {
      "literal": "label"
    },
    "contents": {
      "aimms": {
        "contents": [
          "ui::sp_def_algorithmTitle"
        ],
        "slices": []
      }
    },
    "name": {
      "literal": "lbl_algorithmTitle"
    }
  },
  "widgets/lbl_problemTitle": {
    "aimms.widget.type": {
      "literal": "label"
    },
    "contents": {
      "aimms": {
        "contents": [
          "ui::sp_def_problemTitle"
        ],
        "slices": []
      }
    },
    "name": {
      "literal": "lbl_problemTitle"
    }
  },
  "widgets/map": {
    "aimms.widget.type": {
      "literal": "map-v2"
    },
    "arcs.__display_order__": {
      "literal": [
        "arcs.0"
      ]
    },
    "center.latitude": {
      "literal": 40.882194401806395
    },
    "center.longitude": {
      "literal": -77.84267836403372
    },
    "heatmaps.__display_order__": {
      "literal": [
        "heatmaps.0"
      ]
    },
    "name": {
      "literal": "map"
    },
    "nodes.__display_order__": {
      "literal": [
        "nodes.0",
        "nodes.1"
      ]
    },
    "nodes.0": {
      "aimms": {
        "contents": [
          "p_longitude",
          "p_latitude"
        ],
        "slices": [
          {
            "identifier": "p_longitude",
            "slice": [
              {
                "index": "i_loc",
                "type": "free",
                "value": "i_loc"
              }
            ]
          },
          {
            "identifier": "p_latitude",
            "slice": [
              {
                "index": "i_loc",
                "type": "free",
                "value": "i_loc"
              }
            ]
          }
        ]
      }
    },
    "nodes.0.index": {
      "literal": {
        "identifier": "i_loc"
      }
    },
    "nodes.0.latitude": {
      "literal": {
        "identifier": "p_latitude",
        "slice": [
          {
            "index": "i_loc",
            "type": "free",
            "value": "i_loc"
          }
        ]
      }
    },
    "nodes.0.longitude": {
      "literal": {
        "identifier": "p_longitude",
        "slice": [
          {
            "index": "i_loc",
            "type": "free",
            "value": "i_loc"
          }
        ]
      }
    },
    "nodes.1": {
      "aimms": {
        "contents": [
          "ui::p_bestGlobalSolutionLongitude",
          "ui::p_bestGlobalSolutionLatitude"
        ],
        "slices": [
          {
            "identifier": "ui::p_bestGlobalSolutionLongitude",
            "slice": [
              {
                "index": "i_particle",
                "type": "free",
                "value": "i_particle"
              }
            ]
          },
          {
            "identifier": "ui::p_bestGlobalSolutionLatitude",
            "slice": [
              {
                "index": "i_particle",
                "type": "free",
                "value": "i_particle"
              }
            ]
          }
        ]
      }
    },
    "nodes.1.index": {
      "literal": {
        "identifier": "i_particle"
      }
    },
    "nodes.1.latitude": {
      "literal": {
        "identifier": "ui::p_bestGlobalSolutionLatitude",
        "slice": [
          {
            "index": "i_particle",
            "type": "free",
            "value": "i_particle"
          }
        ]
      }
    },
    "nodes.1.longitude": {
      "literal": {
        "identifier": "ui::p_bestGlobalSolutionLongitude",
        "slice": [
          {
            "index": "i_particle",
            "type": "free",
            "value": "i_particle"
          }
        ]
      }
    },
    "title": {
      "literal": "EV Charging Locations"
    },
    "views": {
      "literal": {}
    },
    "views.__display_order__": {
      "literal": [
        "views.0",
        "views.1"
      ]
    },
    "views.0.type": {
      "literal": "view"
    },
    "views.1.type": {
      "literal": "template"
    },
    "zoom": {
      "literal": 7
    }
  },
  "widgets/Other Parameters": {
    "aimms.widget.type": {
      "literal": "scalar"
    },
    "contents": {
      "aimms": {
        "contents": [
          "p_maxNumberChargersPerStation",
          "p_chargingProbability",
          "p_maxVehicleRange",
          "p_meanVehicleRange"
        ]
      }
    },
    "custom.column.widths": {
      "literal": [
        {
          "type": "rowHeader",
          "colKey": "<IDENTIFIER-SET>",
          "width": 52.32
        },
        {
          "type": "colHeader",
          "colKey": {},
          "width": 35
        }
      ]
    },
    "name": {
      "literal": "scl_otherControls"
    },
    "title": {
      "literal": "Other Controls"
    },
    "views": {
      "literal": {}
    }
  },
  "widgets/Station Cost Breakdown": {
    "aimms.widget.type": {
      "literal": "table"
    },
    "contents": {
      "aimms": {
        "contents": [
          "p_bestGlobalSolutionDrivingCost",
          "p_bestGlobalSolutionChargerCost",
          "p_bestGlobalSolutionNumberOfVehicles"
        ]
      }
    },
    "contents.partition": {
      "literal": {
        "rowHeader": [
          "i_particle"
        ],
        "colHeader": [
          "<IDENTIFIER-SET>"
        ],
        "aggregated": []
      }
    },
    "custom.column.widths": {
      "literal": [
        {
          "type": "rowHeader",
          "colKey": "i_particle",
          "width": 26.3
        },
        {
          "type": "colHeader",
          "colKey": {
            "<IDENTIFIER-SET>": "p_bestGlobalSolutionConstructionCost"
          },
          "width": 21.66
        },
        {
          "type": "colHeader",
          "colKey": {
            "<IDENTIFIER-SET>": "p_bestGlobalSolutionMaintenanceCost"
          },
          "width": 27.7
        },
        {
          "type": "colHeader",
          "colKey": {
            "<IDENTIFIER-SET>": "p_bestGlobalSolutionNumberOfChargers"
          },
          "width": 20.2
        },
        {
          "type": "colHeader",
          "colKey": {
            "<IDENTIFIER-SET>": "p_bestGlobalSolutionChargerCost"
          },
          "width": 27.02
        },
        {
          "type": "colHeader",
          "colKey": {
            "<IDENTIFIER-SET>": "p_bestGlobalSolutionNumberOfVehicles"
          },
          "width": 20.2
        }
      ]
    },
    "name": {
      "literal": "Station Cost Breakdown"
    },
    "title": {
      "literal": "Station Overview"
    },
    "views": {
      "literal": {}
    }
  },
  "widgets/txt_problemDescription": {
    "aimms.widget.type": {
      "literal": "text"
    },
    "contents": {
      "literal": "<div><br></div>"
    },
    "name": {
      "literal": "txt_problemDescription"
    }
  },
  "widgets/txt_welcome": {
    "aimms.widget.type": {
      "literal": "text"
    },
    "contents": {
      "literal": "<div style=\"text-align: center;\">&nbsp;</div><div><b style=\"background-color: inherit; font-size: 32px;\">Welcome!</b></div><div><br></div><div><span style=\"background-color: inherit; font-size: 18px;\">You are in an AIMMS Example. Feel free to play around and create something more in this app!</span></div><div><span style=\"background-color: inherit; font-size: 18px;\">&nbsp;</span></div><div><span style=\"background-color: inherit; font-size: 18px;\">If you do, please fork this repository and commit your changes.&nbsp;This ensures our GitHub stays up-to-date for the entire community!</span></div><div><br></div><div><span style=\"background-color: inherit; font-size: 18px;\">You can also check our other interactive resources:</span></div><div><br></div><ul><li><span style=\"background-color: inherit; font-size: 18px;\">In the online&nbsp;</span><a href=\"https://community.aimms.com/\" style=\"font-size: 18px;\" target=\"_blank\"><span style=\"background-color: inherit;\">Community</span></a><span style=\"background-color: inherit; font-size: 18px;\">, talk to other developers and AIMMSians about the product, modeling, use cases, and more.</span></li><li><span style=\"background-color: inherit; font-size: 18px;\">In the&nbsp;</span><a href=\"https://academy.aimms.com/\" style=\"font-size: 18px;\" target=\"_blank\"><span style=\"background-color: inherit;\">Academy</span></a><span style=\"background-color: inherit; font-size: 18px;\">, learn new skills and challenge yourself. We are busy creating new courses, so keep an eye out!</span></li></ul><div><br></div><div><span style=\"background-color: inherit; font-size: 18px;\">For questions that can't be posted on the community, contact us at&nbsp;</span><i style=\"background-color: rgb(255, 255, 204); font-size: 18px;\">support@aimms.com</i><span style=\"background-color: inherit; font-size: 18px;\">.</span></div><div><br></div><div><br></div><div><br></div><div><br></div><div><br></div><div><br></div><div><br></div>"
    },
    "name": {
      "literal": "txt_welcome"
    }
  }
}